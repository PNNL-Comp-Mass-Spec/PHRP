// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideCleavageStateCalculator.InitializeRegExObjects")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideMassCalculator.ComputeSequenceMass(System.String)~System.Double")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideMassCalculator.ConvertAminoAcidSequenceToEmpiricalFormula(System.String)~PHRPReader.clsEmpiricalFormula")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPHRPParser.IsNumber(System.String)~System.Boolean")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPHRPReader.IsNumber(System.String)~System.Boolean")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.LookupMassCorrectionTagByMass(System.Double,System.Byte,System.Boolean,System.Byte)~System.String")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.SetDefaultMassCorrectionTags")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.StoreMassCorrectionTag(System.String,System.Double)")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.UpdateDefaultModificationSymbols(System.String)")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "Allowed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.ValidateModificationsVsDefaultModificationSymbols")]
[assembly: SuppressMessage("Readability", "RCS1123:Add parentheses when necessary.", Justification = "Parentheses not needed", Scope = "member", Target = "~M:PHRPReader.clsPeptideMassCalculator.ConvoluteMass(System.Double,System.Int32,System.Int32,System.Double)~System.Double")]
[assembly: SuppressMessage("Readability", "RCS1123:Add parentheses when necessary.", Justification = "Parentheses not needed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.LookupDynamicModificationDefinitionByTargetInfo(System.Char,System.Char,PHRPReader.clsAminoAcidModInfo.ResidueTerminusStateConstants,System.Boolean@)~PHRPReader.clsModificationDefinition")]
[assembly: SuppressMessage("Readability", "RCS1123:Add parentheses when necessary.", Justification = "Parentheses not needed", Scope = "member", Target = "~M:PHRPReader.clsPeptideModificationContainer.LookupModificationDefinitionByMass(System.Double,System.Char,PHRPReader.clsAminoAcidModInfo.ResidueTerminusStateConstants,System.Boolean@,System.Boolean,System.Byte)~PHRPReader.clsModificationDefinition")]
[assembly: SuppressMessage("Readability", "RCS1234:Duplicate enum value.", Justification = "Defined for backwards compatibility", Scope = "type", Target = "~T:PHRPReader.clsPHRPReader.ePeptideHitResultType")]
[assembly: SuppressMessage("Readability", "RCS1234:Duplicate enum value.", Justification = "Defined for backwards compatibility", Scope = "type", Target = "~T:PHRPReader.clsPHRPReader.PeptideHitResultTypes")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsAminoAcidModInfo")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsEmpiricalFormula")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsModificationDefinition")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsMSGFPlusParamFileModExtractor")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsMSGFPlusParamFileModExtractor.udtModInfoType")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPeptideCleavageStateCalculator")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPeptideCleavageStateCalculator.udtEnzymeMatchSpecType")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPeptideMassCalculator")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPeptideMassCalculator.udtPeptideSequenceModInfoType")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPeptideModificationContainer")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPModSummaryReader")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParser")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParser.udtAmbiguousModInfo")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserInspect")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMODa")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMODPlus")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMSAlign")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMSGFDB")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMSGFPlus")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserMSPathFinder")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserSequest")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserTopPIC")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPParserXTandem")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPReader")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPReader.ePeptideHitResultType")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPSeqMapReader")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPHRPStartupOptions")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsProteinInfo")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsPSM")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Allowed name", Scope = "type", Target = "~T:PHRPReader.clsSeqInfo")]
[assembly: SuppressMessage("Usage", "RCS1246:Use element access.", Justification = "Prefer to use .First()", Scope = "member", Target = "~M:PHRPReader.clsMSGFPlusParamFileModExtractor.ComputeMass(System.String)~System.Double")]
[assembly: SuppressMessage("Usage", "RCS1246:Use element access.", Justification = "Prefer to use .First()", Scope = "member", Target = "~M:PHRPReader.clsPHRPParser.StoreModInfo(PHRPReader.clsPSM,PHRPReader.clsSeqInfo)")]
[assembly: SuppressMessage("Usage", "RCS1246:Use element access.", Justification = "Prefer to use .First()", Scope = "member", Target = "~M:PHRPReader.clsPHRPParser.UpdatePSMUsingSeqInfo(PHRPReader.clsPSM)~System.Boolean")]
[assembly: SuppressMessage("Usage", "RCS1246:Use element access.", Justification = "Prefer to use .First()", Scope = "member", Target = "~M:PHRPReader.clsPHRPReader.AutoDetermineBestInputFile(System.String,System.Collections.Generic.List{System.String},PHRPReader.clsPHRPReader.PeptideHitResultTypes@)~System.String")]
