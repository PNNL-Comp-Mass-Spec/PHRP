using PeptideHitResultsProcessor.Data;

namespace PeptideHitResultsProcessor.SearchToolResults
{
    /// <summary>
    /// This class holds rows read from MaxQuant file msms.txt
    /// </summary>
    /// <remarks>
    /// It is used when creating the synopsis file
    /// </remarks>
    internal class MaxQuantSearchResult : ToolResultsBaseClass
    {
        // Ignore Spelling: Acetyl, Da, Diff, Orbitrap, PIF, Quant

        /// <summary>
        /// Index of the spectrum in the dataset (1-based, consecutive integer)
        /// </summary>
        public string ScanIndex;

        /// <summary>
        /// Post-translational modifications contained within the identified peptide
        /// This is read from the msms.txt file and includes dynamic modifications, but not static modifications
        /// </summary>
        /// <remarks>
        /// Examples
        /// <para>
        /// One modified residue:
        /// Oxidation (M)
        /// </para>
        /// <para>
        /// Two residues with the same modification
        /// 2 Oxidation (M)
        /// </para>
        /// <para>
        /// Two separate modifications (comma-separated list)
        /// Acetyl (Protein N-term),Oxidation (M)
        /// </para>
        /// </remarks>
        public string ModificationSummary;

        /// <summary>
        /// Comma-separated list of dynamic modification names and affected residue number
        /// This list is generated by this class
        /// </summary>
        /// <remarks>
        /// Example values:
        ///   Oxidation 7
        ///   Acetyl 1,Oxidation 4
        /// </remarks>
        public string Modifications { get; set; }

        // ReSharper disable CommentTypo

        /// <summary>
        /// Peptide sequence with embedded dynamic modifications
        /// </summary>
        /// <remarks>
        /// Example values:
        ///   _YAEGYPGKR_
        ///   _M(Oxidation (M))TSVGSQDTTGPMTR_
        ///   _M(Oxidation (M))TSVGSQDTTGPM(Oxidation (M))TR_
        ///   _(Acetyl (Protein N-term))M(Oxidation (M))GSHVAPTALTCAR_
        /// </remarks>
        public string ModifiedSequence;

        // ReSharper restore CommentTypo

        /// <summary>
        /// Protein(s) associated with this peptide
        /// Semicolon separated list
        /// </summary>
        /// <remarks>
        /// When the peptide is a reverse hit, this property will be an empty string and
        /// the Reverse-hit protein name will be in the LeadingRazorProtein column.
        /// Furthermore, Reverse will be set to true
        /// </remarks>
        public string Proteins;

        /// <summary>
        /// Name of the best scoring protein this peptide is associated with
        /// </summary>
        /// <remarks>
        /// <para>
        /// Typically there is only one protein name here
        /// However, in cases of a tied score, will be a semicolon separated list
        /// </para>
        /// <para>
        /// From the peptides.txt file, column "Leading razor protein"
        /// </para>
        /// </remarks>
        public string LeadingRazorProtein;

        /// <summary>
        /// Type of fragmentation used to create the MS/MS spectrum
        /// </summary>
        /// <remarks>
        /// Types:
        ///   CID - Collision Induced Dissociation
        ///   HCD - High energy Collision induced Dissociation
        ///   ETD - Electron Transfer Dissociation
        /// </remarks>
        public string Fragmentation;

        /// <summary>
        /// Mass Analyzer of the instrument
        /// </summary>
        /// <remarks>
        /// Types:
        ///   ITMS - Ion trap
        ///   FTMS - Fourier transform ICR or Orbitrap
        ///   TOF - Time of flight
        /// </remarks>
        public string MassAnalyzer;

        /// <summary>
        /// Type of precursor ion as identified by MaxQuant
        /// </summary>
        /// <remarks>
        /// <para>
        /// Prefixes:
        ///   ISO - isotopic cluster.
        ///   PEAK - single peak.
        ///   MULTI - labeling cluster.
        /// </para>
        /// <para>
        /// Example values:
        ///   MULTI-MSMS
        ///   MULTI-SECPEP
        ///   MSMS
        /// </para>
        /// </remarks>
        public string PrecursorType;

        /// <summary>
        /// Scan event number
        /// </summary>
        /// <remarks>
        /// <para>
        /// The first MS2 spectrum after a MS1 spectrum has event number 1
        /// The second MS2 spectrum has event number 2
        /// etc.
        /// Once the next MS1 spectrum is reached, scan event number resets to 1 for the next MS2 spectrum
        /// </para>
        /// <para>
        /// Not stored in the synopsis file
        /// </para>
        /// </remarks>
        public string ScanEventNumber;

        /// <summary>
        /// Isotope index
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string IsotopeIndex;

        /// <summary>
        /// Precursor ion m/z (read from a _PrecursorInfo.txt file by PHRP)
        /// </summary>
        public string PrecursorMZ;

        /// <summary>
        /// Precursor ion m/z (theoretical value, not observed value), as reported by MaxQuant
        /// </summary>
        /// <remarks>
        /// This is the theoretical m/z of the first isotope of the isotopic distribution of the parent ion
        /// It does not account for isobaric mods
        /// For more information, see class <see cref="MaxQuantResults"/>
        /// </remarks>
        public string PrecursorMZ_MaxQuant;

        /// <summary>
        /// Mass error of the precursor ion equivalent monoisotopic mass value
        /// vs. the predicted monoisotopic mass of the identified peptide sequence,
        /// as computed by MaxQuant
        /// </summary>
        /// <remarks>
        /// This is NaN if a peptide has Type=MSMS
        /// In contrast, if a peptide has Type=MULTI-MSMS, a value will be defined
        /// </remarks>
        public string MassErrorPpmMaxQuant;

        /// <summary>
        /// Mass error, in Da, as computed by MaxQuant
        /// </summary>
        /// <remarks>
        /// This is NaN if a peptide has Type=MSMS
        /// In contrast, if a peptide has Type=MULTI-MSMS, a value will be defined
        /// </remarks>
        public string MassErrorDaMaxQuant;

        /// <summary>
        /// Simple mass error (ppm)
        /// Specific definition not known
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string SimpleMassErrorPPM;

        /// <summary>
        /// Posterior error probability
        /// </summary>
        /// <remarks>
        /// Similar to p-value
        /// Smaller values (closer to zero) are higher confidence
        /// </remarks>
        public string PEP;

        /// <summary>
        /// Numeric value of PEP
        /// </summary>
        public double PEPValue;

        /// <summary>
        /// Andromeda score for the best MS/MS spectrum with this peptide
        /// </summary>
        /// <remarks>
        /// Larger values are better
        /// </remarks>
        public string Score;

        /// <summary>
        /// Numeric value of Score
        /// </summary>
        public double ScoreNum;

        /// <summary>
        /// Score difference to the second best identified peptide with a different amino acid sequence
        /// </summary>
        public string DeltaScore;

        /// <summary>
        /// Score difference to the second best positioning of modifications identified peptide with the same amino acid sequence
        /// </summary>
        public string ScoreDiff;

        /// <summary>
        /// PTM localization score
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string LocalizationProb;

        /// <summary>
        /// Number of possible distributions of the modifications over the peptide sequence
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string Combinatorics;

        /// <summary>
        /// Summed up extracted ion current (XIC) of all isotopic clusters associated with this peptide
        /// </summary>
        /// <remarks>
        /// From the peptides.txt file, column "Intensity"
        /// </remarks>
        public string TotalPeptideIntensity;

        /// <summary>
        /// Parent Ion Fraction: the fraction of the target peak that makes up of the total intensity in the inclusion window
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string PIF;

        /// <summary>
        /// Percentage the parent ion intensity makes up of the total intensity of the whole spectrum.
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string FractionOfTotalSpectrum;

        /// <summary>
        /// Percentage the parent ion intensity in comparison to the highest peak in he MS spectrum
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string BasePeakFraction;

        /// <summary>
        /// Scan number where the precursor ion was observed
        /// </summary>
        public string PrecursorScanNumber;

        /// <summary>
        /// Intensity of the precursor ion in the scan that it was observed
        /// </summary>
        public string PrecursorIntensity;

        /// <summary>
        /// Fraction the intensity of the precursor ion makes up of the peak (apex) intensity
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string PrecursorApexFraction;

        /// <summary>
        /// The number of scans the precursor ion is offset from the peak (apex) position
        /// </summary>
        /// <remarks>
        /// For example, if the precursor scan is 3220 and the offset is -45, the peak apex is in scan 3265
        /// Not stored in the synopsis file
        /// </remarks>
        public string PrecursorApexOffset;

        /// <summary>
        /// How much time the precursor ion is offset from the peak (apex) position
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string PrecursorApexOffsetTime;

        /// <summary>
        /// Number of peaks (MS/MS ions) matching to the predicted fragmentation spectrum
        /// </summary>
        public string NumberOfMatches;

        /// <summary>
        /// Fraction of intensity in the MS/MS spectrum that is annotated
        /// </summary>
        public string IntensityCoverage;

        /// <summary>
        /// Fraction of peaks in the MS/MS spectrum that are annotated
        /// </summary>
        /// <remarks>
        /// Not stored in the synopsis file
        /// </remarks>
        public string PeakCoverage;

        /// <summary>
        /// Unique (consecutive) identifier for each row in msms.txt
        /// </summary>
        /// <remarks>
        /// Used to cross-link the information in msms.txt with information stored in other files
        /// </remarks>
        public string MsMsID;

        /// <summary>
        /// Identifier of the protein-group this redundant peptide sequence is associated with
        /// </summary>
        /// <remarks>
        /// <para>
        /// Typically a single number, but could be a semicolon separated list
        /// if a peptide is associated with multiple protein groups
        /// </para>
        /// <para>
        /// Can be used to look up the extended protein information in the proteinGroups.txt file
        /// </para>
        /// </remarks>
        public string ProteinGroupIDs;

        /// <summary>
        /// The identifier of the non-redundant peptide sequence
        /// </summary>
        /// <remarks>
        /// Corresponds to the id column in the peptides.txt file
        /// </remarks>
        public string PeptideID;

        /// <summary>
        /// Identifier referencing a row in the modificationSpecificPeptides.txt file
        /// </summary>
        public string ModPeptideID;

        /// <summary>
        /// Identifier referencing a row in the evidence.txt file
        /// </summary>
        public string EvidenceID;

        /// <summary>
        /// Reset stored values to empty strings and zeros
        /// </summary>
        public void Clear()
        {
            DatasetName = string.Empty;
            Scan = string.Empty;
            ScanNum = 0;
            ScanIndex = string.Empty;
            Sequence = string.Empty;
            PrefixResidue = string.Empty;
            SuffixResidue = string.Empty;
            NumberOfTrypticTermini = 0;
            Length = 0;
            MissedCleavageCount = string.Empty;
            ModificationSummary = string.Empty;
            Modifications = string.Empty;
            ModifiedSequence = string.Empty;
            Proteins = string.Empty;
            LeadingRazorProtein = string.Empty;
            Charge = string.Empty;
            ChargeNum = 0;
            Fragmentation = string.Empty;
            MassAnalyzer = string.Empty;
            PrecursorType = string.Empty;
            ScanEventNumber = string.Empty;
            IsotopeIndex = string.Empty;
            PrecursorMZ = string.Empty;
            PrecursorMZ_MaxQuant = string.Empty;
            MH = string.Empty;
            CalculatedMonoMass = string.Empty;
            CalculatedMonoMassValue = 0;
            CalculatedMonoMassPHRP = 0;
            MassErrorPpm = string.Empty;
            MassErrorDa = string.Empty;
            MassErrorPpmMaxQuant = string.Empty;
            MassErrorDaMaxQuant = string.Empty;
            SimpleMassErrorPPM = string.Empty;
            ElutionTime = string.Empty;
            PEP = string.Empty;
            PEPValue = 0;
            Score = string.Empty;
            ScoreNum = 0;
            DeltaScore = string.Empty;
            ScoreDiff = string.Empty;
            RankScore = 0;
            LocalizationProb = string.Empty;
            Combinatorics = string.Empty;
            TotalPeptideIntensity = string.Empty;
            PIF = string.Empty;
            FractionOfTotalSpectrum = string.Empty;
            BasePeakFraction = string.Empty;
            PrecursorScanNumber = string.Empty;
            PrecursorIntensity = string.Empty;
            PrecursorApexFraction = string.Empty;
            PrecursorApexOffset = string.Empty;
            PrecursorApexOffsetTime = string.Empty;
            NumberOfMatches = string.Empty;
            IntensityCoverage = string.Empty;
            PeakCoverage = string.Empty;
            Reverse = false;
            MsMsID = string.Empty;
            ProteinGroupIDs = string.Empty;
            PeptideID = string.Empty;
            ModPeptideID = string.Empty;
            EvidenceID = string.Empty;
            FDR = 0;
            QValue = 0;
        }

        /// <summary>
        /// Show scan, peptide, and PEP
        /// </summary>
        public override string ToString()
        {
            return string.Format("Scan {0}: {1}, PEP {2}", Scan, Sequence, PEP);
        }
    }
}
